/* eslint-disable react/jsx-filename-extension */
import Head from 'next/head';
import React, { useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { IoIosAddCircle } from 'react-icons/io';
import { useRouter } from 'next/navigation';
import asyncPopulateUsersAndThreads from '../states/shared/action';
import ListThread from '../components/ListThread';
import Category from '../components/Category';

export default function Home() {
  const {
    threads = [],
    users = [],
    authUser = null,
  } = useSelector((states) => states);

  const router = useRouter();
  const dispatch = useDispatch();

  useEffect(() => {
    dispatch(asyncPopulateUsersAndThreads());
  }, [dispatch]);

  const linkAddThread = () => {
    router.push('/add');
  };

  const onLike = () => {
    window.alert('comming soon');
  };

  const onUnLike = () => {
    window.alert('comming soon');
  };

  const threadList = threads.map((thread) => ({
    ...thread,
    user: users.find((user) => user.id === thread.ownerId),
    authUser: authUser?.id,
  }));

  if (!threadList) {
    return null;
  }

  return (
    <>
      <Head>
        <title>Forum Apps</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className="thread-container">
        <div className="threads">
          <header>
            <h2>Kategori Popular</h2>
            <div className="category-list">
              {
                threadList.map((thread) => (
                  <Category key={thread.id} {...thread} />
                ))
              }
            </div>
          </header>
          <ListThread threads={threadList} like={onLike} unLike={onUnLike} />
        </div>
        <button className="add-thread" onClick={linkAddThread} type="button">
          {authUser !== null ? (
            <IoIosAddCircle size={50} />
          ) : null}
        </button>
      </section>
    </>
  );
}
